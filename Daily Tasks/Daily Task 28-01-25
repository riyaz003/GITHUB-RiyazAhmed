<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Theme Toggle with Context API</title>
  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <style>
    
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    
    .container {
      text-align: center;
      padding: 50px;
    }

    
    .theme-toggle {
      position: absolute;
      top: 20px;
      right: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
      cursor: pointer;
    }

    .switch {
      position: relative;
      width: 50px;
      height: 25px;
      background-color: #ccc;
      border-radius: 25px;
      transition: background 0.3s ease;
    }

    .switch::before {
      content: "";
      position: absolute;
      top: 3px;
      left: 3px;
      width: 20px;
      height: 20px;
      background: white;
      border-radius: 50%;
      transition: transform 0.3s ease;
    }

    .dark-mode .switch {
      background: #007BFF;
    }

    .dark-mode .switch::before {
      transform: translateX(25px);
    }

    
    .mode-label {
      margin-top: 5px;
      font-size: 14px;
      font-weight: bold;
      color: #333;
      transition: color 0.3s ease;
    }

    .dark-mode .mode-label {
      color: white;
    }

    
    button {
      margin: 10px;
      padding: 10px 15px;
      font-size: 16px;
      border: 2px solid transparent;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease, color 0.3s ease, border 0.3s ease;
    }

    
    .btn-light {
      background: #007BFF;
      color: white;
      border-color: #007BFF;
    }

    .btn-dark {
      background: #555;
      color: white;
      border-color: #555;
    }

    
    .dark-mode .btn-light {
      background: white;
      color: black;
      border-color: white;
    }

    .dark-mode .btn-dark {
      background: #444;
      color: white;
      border-color: #888;
    }
  </style>
</head>
<body>
  <div id="root"></div>

  <script type="text/babel">
    const ThemeContext = React.createContext();
    const CounterContext = React.createContext();

    function ThemeProvider({ children }) {
      const [theme, setTheme] = React.useState("light");

      const toggleTheme = () => {
        setTheme((prevTheme) => (prevTheme === "light" ? "dark" : "light"));
      };

      React.useEffect(() => {
        document.body.className = theme === "dark" ? "dark-mode" : "";
        document.body.style.backgroundColor = theme === "dark" ? "#222" : "#fff";
        document.body.style.color = theme === "dark" ? "#fff" : "#000";
      }, [theme]);

      return (
        <ThemeContext.Provider value={{ theme, toggleTheme }}>
          {children}
        </ThemeContext.Provider>
      );
    }

    function CounterProvider({ children }) {
      const [count, setCount] = React.useState(0);

      const increment = () => setCount(count + 1);
      const decrement = () => setCount(count - 1);

      return (
        <CounterContext.Provider value={{ count, increment, decrement }}>
          {children}
        </CounterContext.Provider>
      );
    }

    function CounterDisplay() {
      const { count } = React.useContext(CounterContext);
      return <h1>Counter: {count}</h1>;
    }

    function CounterControls() {
      const { increment, decrement } = React.useContext(CounterContext);
      return (
        <div>
          <button className="btn-light" onClick={increment}>Increment</button>
          <button className="btn-dark" onClick={decrement}>Decrement</button>
        </div>
      );
    }

    function ThemeToggleButton() {
      const { theme, toggleTheme } = React.useContext(ThemeContext);
      return (
        <div className="theme-toggle" onClick={toggleTheme}>
          <div className="switch"></div>
          <span className="mode-label">
            {theme === "light" ? "Enable Dark Mode" : "Disable Dark Mode"}
          </span>
        </div>
      );
    }

    function App() {
      return (
        <div className="container">
          <ThemeToggleButton />
          <h1>Counter App</h1>
          <CounterDisplay />
          <CounterControls />
        </div>
      );
    }

    ReactDOM.render(
      <ThemeProvider>
        <CounterProvider>
          <App />
        </CounterProvider>
      </ThemeProvider>,
      document.getElementById("root")
    );
  </script>
</body>
</html>
